#define _DEFAULT_SOURCE
#define _BSD_SOURCE 
#define BUF_SIZE 1024

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

struct header {
  uint64_t size;
  struct header* next;
};

void increase_heap_size(intptr_t EXTRA_SIZE) {
  void *progBrk = sbrk(EXTRA_SIZE);

  if (progBrk == (void *)-1) {
    perror("sbrk");
    exit(EXIT_FAILURE);
  }
}

void initialize_block(struct header *block_pointer) {
  void *progBrk = sbrk(0);
  block_pointer = (struct header *)progBrk;

}

void print_out(char *format, void *data, size_t data_size) {
  char buf[BUF_SIZE];
  ssize_t len = snprintf(buf, BUF_SIZE, format,
                          data_size == sizeof(uint64_t) ? *(uint64_t *)data
                                                        : *(void **)data);
  if (len < 0) {
    perror("snprintf");
  }
  write(STDOUT_FILENO, buf, len);
}

int main() {
  size_t EXTRA_SIZE = 256;

  increase_heap_size(EXTRA_SIZE);
  //initialize_block(first_block_pointer);
  //initialize_block(second_block_pointer);
  //print_out( ... )

  return 0;
}
